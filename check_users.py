import asyncio
import asyncpg
from config.config import load_config

async def check_users():
    config = load_config()
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL
    conn = await asyncpg.connect(
        host=config.db.host,
        port=config.db.port,
        database=config.db.database,
        user=config.db.user,
        password=config.db.password
    )
    
    print("üìä –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
    print("-" * 80)
    
    users = await conn.fetch("SELECT * FROM users ORDER BY created_at DESC")
    
    if not users:
        print("üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    else:
        for user in users:
            print(f"ID: {user['id']}")
            print(f"Telegram ID: {user['telegram_id']}")
            print(f"Username: @{user['username'] or '–Ω–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"–ò–º—è: {user['first_name']} {user['last_name']}")
            print(f"–ü–∞–∫–µ—Ç: {user['package_type']}")
            print(f"–£—á–∞—Å—Ç–≤–æ–≤–∞–ª —Ä–∞–Ω–µ–µ: {user['participated_before']}")
            if user['participated_before']:
                print(f"–ì–æ–¥ —É—á–∞—Å—Ç–∏—è: {user['participation_year']}")
            print(f"–í—ã–ø—É—Å–∫–Ω–∏–∫ –í–®–ú: {user['is_vsm_graduate']}")
            if user['graduation_year']:
                print(f"–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞: {user['graduation_year']}")
            print(f"–°–æ–∑–¥–∞–Ω: {user['created_at']}")
            print(f"–û–±–Ω–æ–≤–ª–µ–Ω: {user['updated_at']}")
            print("-" * 80)
    
    await conn.close()

if __name__ == "__main__":
    asyncio.run(check_users())
