#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è username –≤ —Ç–∞–±–ª–∏—Ü—É users
"""
import asyncio
from config.config import load_config
from bot.database import Database


async def add_username_column():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–ª–æ–Ω–∫—É username –≤ —Ç–∞–±–ª–∏—Ü—É users"""
    config = load_config()
    database = Database(config)
    
    try:
        session = await database.get_session()
        try:
            # SQL –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏
            from sqlalchemy import text
            sql = text("ALTER TABLE users ADD COLUMN IF NOT EXISTS username VARCHAR(100);")
            await session.execute(sql)
            await session.commit()
            print("‚úÖ –ö–æ–ª–æ–Ω–∫–∞ username —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É users")
        except Exception as e:
            await session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ–ª–æ–Ω–∫–∏: {e}")
        finally:
            await session.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
    finally:
        await database.close()


if __name__ == "__main__":
    print("üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è username...")
    asyncio.run(add_username_column())