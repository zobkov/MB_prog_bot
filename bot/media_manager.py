import json
import os
from typing import Optional
from aiogram import Bot
from aiogram.types import FSInputFile
from aiogram.enums import ContentType
from aiogram_dialog.api.entities import MediaAttachment, MediaId


class MediaManager:
    def __init__(self, bot: Bot, file_ids_path: str = "file_ids.json"):
        self.bot = bot
        # –ü—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
        project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        self.file_ids_path = os.path.join(project_root, file_ids_path)
        self.target_user_id = 257026813  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è file_id
        
    def _load_file_ids(self) -> dict:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç file_id –∏–∑ JSON —Ñ–∞–π–ª–∞"""
        if os.path.exists(self.file_ids_path):
            try:
                with open(self.file_ids_path, 'r', encoding='utf-8') as f:
                    return json.load(f)
            except (json.JSONDecodeError, FileNotFoundError):
                return {}
        return {}
    
    def _save_file_ids(self, file_ids: dict):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç file_id –≤ JSON —Ñ–∞–π–ª"""
        with open(self.file_ids_path, 'w', encoding='utf-8') as f:
            json.dump(file_ids, f, ensure_ascii=False, indent=2)
    
    async def get_file_id(self, filename: str) -> Optional[str]:
        """–ü–æ–ª—É—á–∞–µ—Ç file_id –¥–ª—è —Ñ–∞–π–ª–∞. –ï—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π"""
        file_ids = self._load_file_ids()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ file_id –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
        if filename in file_ids:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π file_id –¥–ª—è {filename}")
            return file_ids[filename]
        
        # –ï—Å–ª–∏ file_id –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –µ–≥–æ
        print(f"üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è file_id –¥–ª—è {filename}...")
        file_id = await self._generate_file_id(filename)
        
        if file_id:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π file_id
            file_ids[filename] = file_id
            self._save_file_ids(file_ids)
            print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω file_id –¥–ª—è {filename}")
            return file_id
        
        return None
    
    async def _generate_file_id(self, filename: str) -> Optional[str]:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç file_id –ø—É—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞)
            project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
            full_path = os.path.join(project_root, filename)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not os.path.exists(full_path):
                print(f"‚ùå –§–∞–π–ª {full_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return None
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            photo = FSInputFile(full_path)
            message = await self.bot.send_photo(
                chat_id=self.target_user_id,
                photo=photo,
                caption=f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è file_id –¥–ª—è {os.path.basename(filename)}"
            )
            
            # –ü–æ–ª—É—á–∞–µ–º file_id –∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            if message.photo:
                file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω file_id: {file_id}")
                return file_id
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ file_id –¥–ª—è {filename}: {e}")
        
        return None
    
    async def get_media_attachment(self, filename: str) -> Optional[MediaAttachment]:
        """–ü–æ–ª—É—á–∞–µ—Ç MediaAttachment –¥–ª—è —Ñ–∞–π–ª–∞"""
        file_id = await self.get_file_id(filename)
        if file_id:
            return MediaAttachment(ContentType.PHOTO, file_id=MediaId(file_id))
        return None