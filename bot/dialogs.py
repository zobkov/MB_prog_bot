from typing import Any, Dict
from aiogram.types import CallbackQuery, Message
from aiogram_dialog import Dialog, DialogManager, Window, ShowMode
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Column, Select, Back
from aiogram_dialog.widgets.input import TextInput
from bot.states import RegistrationSG


# –¢–µ–∫—Å—Ç—ã –¥–ª—è –±–æ—Ç–∞
WELCOME_TEXT = """–î–æ—Ä–æ–≥–∏–µ –≤—ã–ø—É—Å–∫–Ω–∏–∫–∏! 

–í —ç—Ç–æ–º –≥–æ–¥—É –Ω–∞ –ú–ë25 –º—ã —Ö–æ—Ç–∏–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–Ω–æ–≤–∞ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏! –î–ª—è —ç—Ç–æ–≥–æ –º—ã –ø—Ä–∏–¥—É–º–∞–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤. –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –¥–µ–ª–æ–≤—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ—Ç—å–µ–≥–æ –¥–Ω—è, –ø–æ—Å–ª—É—à–∞—Ç—å –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –¥–∏—Å–∫—É—Å—Å–∏–∏ —É–≤–∞–∂–∞–µ–º—ã—Ö —Å–ø–∏–∫–µ—Ä–æ–≤, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–µ - —Ä–∞–∑–≤–∏—Ç—å —Å–≤–æ–∏ —Å–æ—Ñ—Ç—Å–∫–∏–ª–ª—ã –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ü–µ–Ω–Ω—ã–µ –¥–µ–ª–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã."""

PACKAGES_TEXT = """–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ—Å–µ—Ç–∏—Ç—å –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é –≤ —Ç—Ä–µ—Ç–∏–π –¥–µ–Ω—å - 25 –æ–∫—Ç—è–±—Ä—è. –ï—Å—Ç—å —Ç—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —É—á–∞—Å—Ç–∏—è:

1. –î–µ–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ - —É—á–∞—Å—Ç–∏–µ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö —Ç—Ä–µ—Ç—å–µ–≥–æ –¥–Ω—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ (25 –æ–∫—Ç—è–±—Ä—è). 
–í–∞—Å –∂–¥—É—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ª–µ–∫—Ü–∏–∏ –æ—Ç —Ç–æ–ø–æ–≤—ã—Ö —Å–ø–∏–∫–µ—Ä–æ–≤, –ø–∞–Ω–µ–ª—å–Ω—ã–µ –¥–∏—Å–∫—É—Å—Å–∏–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ —Å –ø–µ—Ä–µ—Ä—ã–≤–æ–º –Ω–∞ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–≤—ã–∫ —Ü–µ–ª–µ–ø–æ–ª–∞–≥–∞–Ω–∏—è –∏ –¥–µ–ª–æ–≤–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤. –°–ø–ª–æ—à–Ω–∞—è –ø–æ–ª—å–∑–∞ —Å —É—Ç—Ä–∞ –∏ –¥–æ —Å–∞–º–æ–≥–æ –≤–µ—á–µ—Ä–∞.
–°—Ç–æ–∏–º–æ—Å—Ç—å: 2 990—Ä

2. –ì–∞–ª–∞-—É–∂–∏–Ω - –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º –Ω–∞ –ü–µ—Ç–µ—Ä–±—É—Ä–≥.
–í–∞—à —à–∞–Ω—Å –∑–∞ –±–æ–∫–∞–ª–æ–º –∏–≥—Ä–∏—Å—Ç–æ–≥–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –Ω—ã–Ω–µ—à–Ω–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ - –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –ø—Ä–∏—è—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –∏ –≤–∫—É—Å–Ω—ã–º —Ñ—É—Ä—à–µ—Ç–æ–º. 
–°—Ç–æ–∏–º–æ—Å—Ç—å: 3 490—Ä

3. –î–µ–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –≥–∞–ª–∞-—É–∂–∏–Ω - —Ü–µ–ª—ã–π –¥–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –≤–µ—á–µ—Ä–æ–º.
–°–Ω–∞—á–∞–ª–∞ –ø–æ—Å–ª—É—à–∞–µ—Ç–µ –≤—Å–µ —Å–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Ç—Ä–µ—Ç—å–µ–≥–æ –¥–Ω—è, –∞ –≤–µ—á–µ—Ä–æ–º –æ—Ç–¥–æ—Ö–Ω–µ—Ç–µ –Ω–∞ —É–∂–∏–Ω–µ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ —Å –≤–∏–¥–æ–º –Ω–∞ –Ω–æ—á–Ω–æ–π –≥–æ—Ä–æ–¥.
–°—Ç–æ–∏–º–æ—Å—Ç—å: 5 990—Ä

–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –ª–∏—Å—Ç –æ–∂–∏–¥–∞–Ω–∏—è, –≤—ã–±–µ—Ä–∏ –ø–∞–∫–µ—Ç —É—á–∞—Å—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω."""

COMPLETION_TEXT = """–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è! –í —ç—Ç–æ—Ç –±–æ—Ç –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ—é—Ç—Å—è –ø—Ä–æ–¥–∞–∂–∏. –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏!"""

PROGRAM_TEXT = """<b>–¢—Ä–µ—Ç–∏–π –¥–µ–Ω—å –ú–ë: –±—É—Å—Ç –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è</b>

–≠—Ç–æ—Ç —Ç—Ä–µ–∫ –º—ã –ø–æ—Å–≤—è—â–∞–µ–º –≤–∞–º ‚Äî –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞–º, —á—Ç–æ —Å—Ç—Ä–æ—è—Ç –±—É–¥—É—â–µ–µ –≤ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–µ. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞—Å—ã—â–µ–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–æ–π –∏ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–æ–º, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤–∞–º –º–∞–∫—Å–∏–º—É–º –ø–æ–ª–µ–∑–Ω–æ–≥–æ –¥–ª—è –∫–∞—Ä—å–µ—Ä—ã.

üéØ <b>–î–µ–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:</b>

<b>12:00‚Äì13:20 | –ò–≥—Ä–∞-–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ –ø–æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –≤ –∫–æ–º–∞–Ω–¥–µ</b>
–†–∞–∑–±–µ—Ä—ë–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ–±—â–µ–Ω–∏—è –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ –≤ –ª—ë–≥–∫–æ–º –∏–≥—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –í—ã –æ—Ç–∫—Ä–æ–µ—Ç–µ –¥–ª—è —Å–µ–±—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω–∏–º–∞—Ç—å –∫–æ–ª–ª–µ–≥ –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å –æ–±—â–∏—Ö —Ü–µ–ª–µ–π –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Å—Ç—Ä–µ—Å—Å–∞. –ü–æ–≥—Ä—É–∑–∏–º—Å—è –≤ –∂–∏–≤—ã–µ –∫–µ–π—Å—ã –∏ –Ω–∞–π–¥—ë–º —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤.

<b>14:30‚Äì15:10 | –í–æ—Ä–∫—à–æ–ø –ø–æ —Å–∞–º–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏</b>
–ù–∞—É—á–∏–º—Å—è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ —Å–µ–±–µ —Ç–∞–∫, —á—Ç–æ–±—ã –≤–∞—Å –∑–∞–ø–æ–º–∏–Ω–∞–ª–∏ ‚Äî –∏ –∫–∞–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞, –∏ –∫–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –ª–∏—á–Ω–æ—Å—Ç—å. –í—ã –æ—Å–≤–æ–∏—Ç–µ 3 –ø–æ–¥—Ö–æ–¥–∞ –∏ —Å–æ–∑–¥–∞–¥–∏—Ç–µ 3 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Å–∞–º–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π: —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ, –∫–∞—Ä—å–µ—Ä–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ. –£–∑–Ω–∞–µ—Ç–µ, –∫–∞–∫ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ –ª—é–±–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π.

<b>15:10‚Äì15:30 | –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –±—ã—Å—Ç—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á</b>
–î–∏–Ω–∞–º–∏—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞–º–∏ –æ—Ç —Å—Ç–æ–ª–∞ –∫ —Å—Ç–æ–ª—É, –æ–±–º–µ–Ω–æ–º –º–Ω–µ–Ω–∏–π –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º –∏ —Å–≤–æ–±–æ–¥–Ω—ã–º–∏ –¥–∏–∞–ª–æ–≥–∞–º–∏. –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –∏ –±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∫—Ä—É–≥ –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ –∏ –Ω–∞–π—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏.

üë©‚Äçüè´ <b>–°–ø–∏–∫–µ—Ä—ã –∏ —Ñ–∞—Å–∏–ª–∏—Ç–∞—Ç–æ—Ä—ã:</b>

–ö–∞—Ç—è –ú–∏—Ç—É—Å–æ–≤–∞ ‚Äî –õ–∏–¥–µ—Ä Women in Tech Russia, ex-Google, ex-Wrike, Platinum Tier Facilitator #IamRemarkable

–û–ª—è –ß–∞–¥—É–ª–∏–Ω–∞ ‚Äî HR –≤ IT, ex-Raiffeisenbank, –∫–∞—Ä—å–µ—Ä–Ω—ã–π –º–µ–Ω—Ç–æ—Ä –∏ –∫–æ—É—á ICF, –∞–≤—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ ¬´–í—Å—ë —Ç—ã –º–æ–∂–µ—à—å¬ª

–õ–µ–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞ ‚Äî Product Owner –≤ EdTech, ex-–ù–µ—Ç–æ–ª–æ–≥–∏—è, ex-–Ø–Ω–¥–µ–∫—Å –ü—Ä–∞–∫—Ç–∏–∫—É–º, –∞–≤—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ –∏ –ø–æ–¥–∫–∞—Å—Ç–∞ ¬´–ö–∞—Ä—å–µ—Ä–∞ –±–µ–∑ –±–∞–≥–æ–≤¬ª, —Å–æ–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ ¬´–ï—â—ë –Ω–µ –ø—Ä–æ–¥–∞–∫—Ç—ã¬ª

‚ú® <b>–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –±—ã—Ç—å?</b>

–§–∏–Ω–∞–ª—å–Ω—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –≤–∞—à–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∫–∞—á–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏, –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–∏–µ –∏–Ω—Å–∞–π—Ç—ã –∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å —Ç–µ–º–∏, –∫—Ç–æ —Ä–∞–∑–¥–µ–ª—è–µ—Ç –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å –∫ –±—É–¥—É—â–µ–º—É –≤ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–µ.

<b>–ñ–¥—ë–º –∏–º–µ–Ω–Ω–æ –≤–∞—Å, –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –∏ –í—ã—Å—à–µ–π –®–∫–æ–ª—ã –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞!</b>"""


# –ì–µ—Ç—Ç–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤
async def get_packages_data(**kwargs):
    return {
        "packages": [
            ("–î–µ–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ - 2 990", "business"),
            ("–ì–∞–ª–∞-—É–∂–∏–Ω - 3 490", "gala"),
            ("–î–µ–ª–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –≥–∞–ª–∞-—É–∂–∏–Ω - 5 990", "full"),
        ]
    }


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ –≤–≤–æ–¥–∞
async def on_package_selected(callback: CallbackQuery, widget, dialog_manager: DialogManager, item_id: str):
    dialog_manager.dialog_data["package_type"] = item_id
    await dialog_manager.switch_to(RegistrationSG.first_name, show_mode=ShowMode.SEND)


async def on_first_name_input(message: Message, widget, dialog_manager: DialogManager, text: str):
    if len(text.strip()) < 2:
        await message.answer("–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return
    dialog_manager.dialog_data["first_name"] = text.strip()
    await dialog_manager.next()


async def on_last_name_input(message: Message, widget, dialog_manager: DialogManager, text: str):
    if len(text.strip()) < 2:
        await message.answer("–§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return
    dialog_manager.dialog_data["last_name"] = text.strip()
    await dialog_manager.next()


async def on_participated_yes(callback: CallbackQuery, widget, dialog_manager: DialogManager):
    dialog_manager.dialog_data["participated_before"] = True
    await dialog_manager.next()


async def on_participated_no(callback: CallbackQuery, widget, dialog_manager: DialogManager):
    dialog_manager.dialog_data["participated_before"] = False
    dialog_manager.dialog_data["participation_year"] = None
    await dialog_manager.switch_to(RegistrationSG.is_vsm_graduate)


async def on_participation_year_input(message: Message, widget, dialog_manager: DialogManager, text: str):
    year = text.strip()
    if not year.isdigit() or len(year) != 4 or int(year) < 2000 or int(year) > 2024:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ —É—á–∞—Å—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2023).")
        return
    dialog_manager.dialog_data["participation_year"] = year
    await dialog_manager.next()


async def on_vsm_graduate_yes(callback: CallbackQuery, widget, dialog_manager: DialogManager):
    dialog_manager.dialog_data["is_vsm_graduate"] = True
    await dialog_manager.next()


async def on_vsm_graduate_no(callback: CallbackQuery, widget, dialog_manager: DialogManager):
    dialog_manager.dialog_data["is_vsm_graduate"] = False
    dialog_manager.dialog_data["graduation_year"] = None
    await complete_registration(callback, widget, dialog_manager)


async def on_graduation_year_input(message: Message, widget, dialog_manager: DialogManager, text: str):
    year = text.strip()
    if not year.isdigit() or len(year) != 4 or int(year) < 1990 or int(year) >= 2026:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2020).")
        return
    dialog_manager.dialog_data["graduation_year"] = year
    await complete_registration(None, widget, dialog_manager)


async def complete_registration(callback, widget, dialog_manager: DialogManager):
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
    user_data = {
        "telegram_id": dialog_manager.event.from_user.id,
        "username": dialog_manager.event.from_user.username,  # Telegram username
        "first_name": dialog_manager.dialog_data["first_name"],
        "last_name": dialog_manager.dialog_data["last_name"],
        "package_type": dialog_manager.dialog_data["package_type"],
        "participated_before": dialog_manager.dialog_data["participated_before"],
        "participation_year": dialog_manager.dialog_data.get("participation_year"),
        "is_vsm_graduate": dialog_manager.dialog_data["is_vsm_graduate"],
        "graduation_year": dialog_manager.dialog_data.get("graduation_year"),
    }
    
    saved_user = None
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    try:
        user_repo = dialog_manager.middleware_data.get('user_repo')
        if user_repo:
            saved_user = await user_repo.create_user(user_data)
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['telegram_id']} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ë–î")
        else:
            print("‚ö†Ô∏è UserRepository –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ middleware_data")
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Google Sheets
    if saved_user:
        try:
            google_sheets = dialog_manager.middleware_data.get('google_sheets')
            if google_sheets:
                success = google_sheets.add_user_to_sheet(saved_user)
                if success:
                    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_data['telegram_id']} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Google Sheets")
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets")
            else:
                print("‚ö†Ô∏è Google Sheets —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ middleware_data")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ Google Sheets: {e}")
    
    await dialog_manager.switch_to(RegistrationSG.completed)


# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
registration_dialog = Dialog(
    # –û–∫–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    Window(
        Const(WELCOME_TEXT),
        Column(
            Button(
                Const("–ê —á—Ç–æ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ?"),
                id="show_program",
                on_click=lambda c, w, m: m.switch_to(RegistrationSG.program_info)
            ),
            Button(
                Const("–ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å?"),
                id="how_to_participate",
                on_click=lambda c, w, m: m.switch_to(RegistrationSG.package_selection)
            ),
        ),
        state=RegistrationSG.welcome,
    ),
    
    # –û–∫–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–Ω—è
    Window(
        Const(PROGRAM_TEXT),
        Button(
            Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
            id="back_to_welcome",
            on_click=lambda c, w, m: m.switch_to(RegistrationSG.welcome)
        ),
        state=RegistrationSG.program_info,
    ),
    
    # –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤
    Window(
        Const(PACKAGES_TEXT),
        Column(
            Select(
                Format("{item[0]}"),
                id="package_select",
                item_id_getter=lambda item: item[1],
                items="packages",
                on_click=on_package_selected,
            ),
        ),
        Back(Const(PROGRAM_TEXT)),
        getter=get_packages_data,
        state=RegistrationSG.package_selection,
    ),
    
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:\n\n–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω"),
        TextInput(
            id="first_name_input",
            on_success=on_first_name_input,
        ),
        state=RegistrationSG.first_name,
    ),
    
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ —Ñ–∞–º–∏–ª–∏–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:\n\n–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤"),
        TextInput(
            id="last_name_input", 
            on_success=on_last_name_input,
        ),
        state=RegistrationSG.last_name,
    ),
    
    # –û–∫–Ω–æ –≤–æ–ø—Ä–æ—Å–∞ –æ–± —É—á–∞—Å—Ç–∏–∏ –≤ –ú–ë —Ä–∞–Ω–µ–µ
    Window(
        Const("–£—á–∞—Å—Ç–≤–æ–≤–∞–ª –ª–∏ —Ç—ã –≤ –ú–ë —Ä–∞–Ω–µ–µ?"),
        Column(
            Button(
                Const("–î–∞"),
                id="participated_yes",
                on_click=on_participated_yes,
            ),
            Button(
                Const("–ù–µ—Ç"),
                id="participated_no", 
                on_click=on_participated_no,
            ),
        ),
        state=RegistrationSG.participated_before,
    ),
    
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ –≥–æ–¥–∞ —É—á–∞—Å—Ç–∏—è
    Window(
        Const("–í –∫–∞–∫–æ–º –≥–æ–¥—É —Ç—ã —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –ú–ë?"),
        TextInput(
            id="participation_year_input",
            on_success=on_participation_year_input,
        ),
        state=RegistrationSG.participation_year,
    ),
    
    # –û–∫–Ω–æ –≤–æ–ø—Ä–æ—Å–∞ –æ –≤—ã–ø—É—Å–∫–Ω–∏–∫–µ –í–®–ú
    Window(
        Const("–¢—ã –≤—ã–ø—É—Å–∫–Ω–∏–∫ –í–®–ú?"),
        Column(
            Button(
                Const("–î–∞"),
                id="vsm_graduate_yes",
                on_click=on_vsm_graduate_yes,
            ),
            Button(
                Const("–ù–µ—Ç"),
                id="vsm_graduate_no",
                on_click=on_vsm_graduate_no,
            ),
        ),
        state=RegistrationSG.is_vsm_graduate,
    ),
    
    # –û–∫–Ω–æ –≤–≤–æ–¥–∞ –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞
    Window(
        Const("–í –∫–∞–∫–æ–º –≥–æ–¥—É —Ç—ã –æ–∫–æ–Ω—á–∏–ª –í–®–ú?"),
        TextInput(
            id="graduation_year_input",
            on_success=on_graduation_year_input,
        ),
        state=RegistrationSG.graduation_year,
    ),
    
    # –û–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    Window(
        Const(COMPLETION_TEXT),
        state=RegistrationSG.completed,
    ),
)